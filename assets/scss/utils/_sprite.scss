// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$bg-hero-name: 'bg-hero';
$bg-hero-x: 1445px;
$bg-hero-y: 0px;
$bg-hero-offset-x: -1445px;
$bg-hero-offset-y: 0px;
$bg-hero-width: 1440px;
$bg-hero-height: 721px;
$bg-hero-total-width: 2885px;
$bg-hero-total-height: 1486px;
$bg-hero-image: '../img/sprite.png';
$bg-hero: (1445px, 0px, -1445px, 0px, 1440px, 721px, 2885px, 1486px, '../img/sprite.png', 'bg-hero', );
$bg-footer-name: 'bg_footer';
$bg-footer-x: 1445px;
$bg-footer-y: 1132px;
$bg-footer-offset-x: -1445px;
$bg-footer-offset-y: -1132px;
$bg-footer-width: 1440px;
$bg-footer-height: 263px;
$bg-footer-total-width: 2885px;
$bg-footer-total-height: 1486px;
$bg-footer-image: '../img/sprite.png';
$bg-footer: (1445px, 1132px, -1445px, -1132px, 1440px, 263px, 2885px, 1486px, '../img/sprite.png', 'bg_footer', );
$bg-hero-name: 'bg_hero';
$bg-hero-x: 0px;
$bg-hero-y: 765px;
$bg-hero-offset-x: 0px;
$bg-hero-offset-y: -765px;
$bg-hero-width: 1440px;
$bg-hero-height: 721px;
$bg-hero-total-width: 2885px;
$bg-hero-total-height: 1486px;
$bg-hero-image: '../img/sprite.png';
$bg-hero: (0px, 765px, 0px, -765px, 1440px, 721px, 2885px, 1486px, '../img/sprite.png', 'bg_hero', );
$bg-subscribe-name: 'bg_subscribe';
$bg-subscribe-x: 1445px;
$bg-subscribe-y: 765px;
$bg-subscribe-offset-x: -1445px;
$bg-subscribe-offset-y: -765px;
$bg-subscribe-width: 1440px;
$bg-subscribe-height: 362px;
$bg-subscribe-total-width: 2885px;
$bg-subscribe-total-height: 1486px;
$bg-subscribe-image: '../img/sprite.png';
$bg-subscribe: (1445px, 765px, -1445px, -765px, 1440px, 362px, 2885px, 1486px, '../img/sprite.png', 'bg_subscribe', );
$bg-video-name: 'bg_video';
$bg-video-x: 0px;
$bg-video-y: 0px;
$bg-video-offset-x: 0px;
$bg-video-offset-y: 0px;
$bg-video-width: 1440px;
$bg-video-height: 760px;
$bg-video-total-width: 2885px;
$bg-video-total-height: 1486px;
$bg-video-image: '../img/sprite.png';
$bg-video: (0px, 0px, 0px, 0px, 1440px, 760px, 2885px, 1486px, '../img/sprite.png', 'bg_video', );
$spritesheet-width: 2885px;
$spritesheet-height: 1486px;
$spritesheet-image: '../img/sprite.png';
$spritesheet-sprites: ($bg-hero, $bg-footer, $bg-hero, $bg-subscribe, $bg-video, );
$spritesheet: (2885px, 1486px, '../img/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
